---
import { getCollection } from 'astro:content';
import TeamMember from './TeamMember.astro';

interface Props {
  tipo: String;
}

const ceo = await getCollection('ceo');
const ing = await getCollection('ingenieros');
const {tipo} = Astro.props;
---
{ tipo === 'ceo' && 
<div id="y-axis-1">
  <div id="sticky-div" class="overflow-hidden">
    <h1 class="text-6xl font-bold text-center m-10">Directores (CEO)</h1>
      <div id="x-axis-1" class="relative w-full">
        <div id="ceo" class="w-[250%] md:w-[100%] grid grid-flow-col auto-cols-[21%] gap-3 p-3 snap-x">
          {ceo.map((tm) => <TeamMember team={tm}/>)}
        </div>
    </div>
  </div>
</div>
}
{ tipo === 'ing' && 
<div id="y-axis-2">
  <div id="sticky-div" class="overflow-hidden">
    <h1 class="text-6xl font-bold text-center m-10">Ingenieros de Software</h1>
      <div id="x-axis-2" class="relative w-full">
        <div id="ingenieros" class="w-[250%] md:w-[100%] grid grid-flow-col auto-cols-[21%] gap-3 p-3 snap-x">
          {ing.map((tm) => <TeamMember team={tm}/>)}
        </div>
    </div>
  </div>
</div>
}

<style>
#sticky-div {
  height: 100vh;
  width: 100%;
  background-color: hsla(0, 0%, 100%, 0.51);
}
</style>

<script>
  import gsap from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);
  const ceo = document.querySelector("#ceo") as HTMLElement;
  const ingenieros = document.querySelector("#ingenieros") as HTMLElement;

  //Scroll offset amount for the x-axis
  function getScrollAmount(elmt: HTMLElement) {
    //get the width of the element in percentage
    //1.get parent element
    const  parentWidth = elmt.offsetParent as HTMLElement;
    //2.get the width of the parent element and the width of the child element and divide them
    const percent = (elmt.offsetWidth/parentWidth.offsetWidth);

    const elmtWidth = elmt.scrollWidth;
    return -(elmtWidth - elmt.offsetWidth / percent);
  }
  
  const tween1 = gsap.to("#x-axis-1", {
    x: getScrollAmount(ceo),
    ease: "none",
    duration: 3,
  });

  const tween2 = gsap.to("#x-axis-2", {
    x: getScrollAmount(ingenieros),
    ease: "none",
    duration: 3,
  });

  //CEO
  ScrollTrigger.create({
    trigger: "#y-axis-1",
    start: "top",
    end: "1000px", // <-- Aqui es donde se cambia la velocidad.
    pin: true,
    animation: tween1,
    // markers: true,
    scrub: 1,
  });

  //INGENIEROS
  ScrollTrigger.create({
    trigger: "#y-axis-2",
    start: "top",
    end: "3000px", // <-- Aqui es donde se cambia la velocidad.
    pin: true,
    animation: tween2,
    // markers: true,
    scrub: 1,
  });
</script>